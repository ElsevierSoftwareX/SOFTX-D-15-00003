.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\" (and then reused elsewhere, since this isn't a perl package)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GROMACS 7"
.TH GROMACS 7 "" "VERSION 5.0.5" "GROMACS Manual"
.SH "NAME"
gromacs \- molecular dynamics simulation suite
.SH "DESCRIPTION"
.B GROMACS
(the Groningen Machine for Chemical Simulations) is a full-featured
suite of programs to perform molecular dynamics simulations - in other
words, to simulate the behavior of systems with hundreds to millions
of particles, using Newtonian equations of motion.  It is primarily
used for research on proteins, lipids, and polymers, but can be applied
to a wide variety of chemical and biological research questions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PP
The following commands make up the GROMACS suite.  Please refer to their
individual man pages for further details.
.Sh "Trajectory analysis"
.IX Subsection "Trajectory analysis"
.Vb
.ta 16n
\&  gmx-gangle	Calculate angles
\&  gmx-distance	Calculate distances between pairs of positions
\&  gmx-freevolume	Calculate free volume
\&  gmx-sasa	Compute solvent accessible surface area
\&  gmx-select	Print general information about selections
.Ve
.Sh "Generating topologies and coordinates"
.IX Subsection "Generating topologies and coordinates"
.Vb
.ta 16n
\&  gmx-editconf	Edit the box and write subgroups
\&  gmx-protonate	Protonate structures
\&  gmx-x2top	Generate a primitive topology from coordinates
\&  gmx-solvate	Solvate a system
\&  gmx-insert-molecules	Insert molecules into existing vacancies
\&  gmx-genconf	Multiply a conformation in 'random' orientations
\&  gmx-genion	Generate monoatomic ions on energetically favorable positions
\&  gmx-genrestr	Generate position restraints or distance restraints for index groups
\&  gmx-pdb2gmx	Convert coordinate files to topology and FF-compliant coordinate files
.Ve
.Sh "Running a simulation"
.IX Subsection "Running a simulation"
.Vb
.ta 16n
\&  gmx-grompp	Make a run input file
\&  gmx-mdrun	Perform a simulation, do a normal mode analysis or an energy minimization
\&  gmx-convert-tpr	Make a modifed run-input file
.Ve
.Sh "Viewing trajectories"
.IX Subsection "Viewing trajectories"
.Vb
.ta 16n
\&  gmx-nmtraj	Generate a virtual oscillating trajectory from an eigenvector
\&  gmx-view	View a trajectory on an X-Windows terminal
.Ve
.Sh "Processing energies"
.IX Subsection "Processing energies"
.Vb
.ta 16n
\&  gmx-enemat	Extract an energy matrix from an energy file
\&  gmx-energy	Writes energies to xvg files and display averages
\&  gmx-mdrun	(Re)calculate energies for trajectory frames with -rerun
.Ve
.Sh "Converting files"
.IX Subsection "Converting files"
.Vb
.ta 16n
\&  gmx-editconf	Convert and manipulates structure files
\&  gmx-eneconv	Convert energy files
\&  gmx-sigeps	Convert c6/12 or c6/cn combinations to and from sigma/epsilon
\&  gmx-trjcat	Concatenate trajectory files
\&  gmx-trjconv	Convert and manipulates trajectory files
\&  gmx-xpm2ps	Convert XPM (XPixelMap) matrices to postscript or XPM
.Ve
.Sh "Tools"
.IX Subsection "Tools"
.Vb
.ta 16n
\&  gmx-analyze	Analyze data sets
\&  gmx-dyndom	Interpolate and extrapolate structure rotations
\&  gmx-filter	Frequency filter trajectories, useful for making smooth movies
\&  gmx-lie	Estimate free energy from linear combinations
\&  gmx-morph	Interpolate linearly between conformations
\&  gmx-pme_error	Estimate the error of using PME with a given input file
\&  gmx-sham	Compute free energies or other histograms from histograms
\&  gmx-spatial	Calculate the spatial distribution function
\&  gmx-traj	Plot x, v, f, box, temperature and rotational energy from trajectories
\&  gmx-tune_pme	Time mdrun as a function of PME ranks to optimize settings
\&  gmx-wham	Perform weighted histogram analysis after umbrella sampling
\&  gmx-check	Check and compare files
\&  gmx-dump	Make binary files human readable
\&  gmx-make_ndx	Make index files
\&  gmx-mk_angndx	Generate index files for 'gmx angle'
\&  gmx-trjorder	Order molecules according to their distance to a group
\&  gmx-xpm2ps	Convert XPM (XPixelMap) matrices to postscript or XPM
.Ve
.Sh "Distances between structures"
.IX Subsection "Distances between structures"
.Vb
.ta 16n
\&  gmx-cluster	Cluster structures
\&  gmx-confrms	Fit two structures and calculates the RMSD
\&  gmx-rms	Calculate RMSDs with a reference structure and RMSD matrices
\&  gmx-rmsf	Calculate atomic fluctuations
.Ve
.Sh "Distances in structures over time"
.IX Subsection "Distances in structures over time"
.Vb
.ta 16n
\&  gmx-mindist	Calculate the minimum distance between two groups
\&  gmx-mdmat	Calculate residue contact maps
\&  gmx-polystat	Calculate static properties of polymers
\&  gmx-rmsdist	Calculate atom pair distances averaged with power -2, -3 or -6
.Ve
.Sh "Mass distribution properties over time"
.IX Subsection "Mass distribution properties over time"
.Vb
.ta 16n
\&  gmx-gyrate	Calculate the radius of gyration
\&  gmx-msd	Calculates mean square displacements
\&  gmx-polystat	Calculate static properties of polymers
\&  gmx-rdf	Calculate radial distribution functions
\&  gmx-rotacf	Calculate the rotational correlation function for molecules
\&  gmx-rotmat	Plot the rotation matrix for fitting to a reference structure
\&  gmx-sans	Compute small angle neutron scattering spectra
\&  gmx-saxs	Compute small angle X-ray scattering spectra
\&  gmx-traj	Plot x, v, f, box, temperature and rotational energy from trajectories
\&  gmx-vanhove	Compute Van Hove displacement and correlation functions
.Ve
.Sh "Analyzing bonded interactions"
.IX Subsection "Analyzing bonded interactions"
.Vb
.ta 16n
\&  gmx-angle	Calculate distributions and correlations for angles and dihedrals
\&  gmx-mk_angndx	Generate index files for 'gmx angle'
.Ve
.Sh "Structural properties"
.IX Subsection "Structural properties"
.Vb
.ta 16n
\&  gmx-anadock	Cluster structures from Autodock runs
\&  gmx-bundle	Analyze bundles of axes, e.g., helices
\&  gmx-clustsize	Calculate size distributions of atomic clusters
\&  gmx-disre	Analyze distance restraints
\&  gmx-hbond	Compute and analyze hydrogen bonds
\&  gmx-order	Compute the order parameter per atom for carbon tails
\&  gmx-principal	Calculate principal axes of inertia for a group of atoms
\&  gmx-rdf	Calculate radial distribution functions
\&  gmx-saltbr	Compute salt bridges
\&  gmx-sorient	Analyze solvent orientation around solutes
\&  gmx-spol	Analyze solvent dipole orientation and polarization around solutes
.Ve
.Sh "Kinetic properties"
.IX Subsection "Kinetic properties"
.Vb
.ta 16n
\&  gmx-bar	Calculate free energy difference estimates through Bennett's acceptance ratio
\&  gmx-current	Calculate dielectric constants and current autocorrelation function
\&  gmx-dos	Analyze density of states and properties based on that
\&  gmx-dyecoupl	Extract dye dynamics from trajectories
\&  gmx-principal	Calculate principal axes of inertia for a group of atoms
\&  gmx-tcaf	Calculate viscosities of liquids
\&  gmx-traj	Plot x, v, f, box, temperature and rotational energy from trajectories
\&  gmx-vanhove	Compute Van Hove displacement and correlation functions
\&  gmx-velacc	Calculate velocity autocorrelation functions
.Ve
.Sh "Electrostatic properties"
.IX Subsection "Electrostatic properties"
.Vb
.ta 16n
\&  gmx-current	Calculate dielectric constants and current autocorrelation function
\&  gmx-dielectric	Calculate frequency dependent dielectric constants
\&  gmx-dipoles	Compute the total dipole plus fluctuations
\&  gmx-potential	Calculate the electrostatic potential across the box
\&  gmx-spol	Analyze solvent dipole orientation and polarization around solutes
\&  gmx-genion	Generate monoatomic ions on energetically favorable positions
.Ve
.Sh "Protein-specific analysis"
.IX Subsection "Protein-specific analysis"
.Vb
.ta 16n
\&  gmx-do_dssp	Assign secondary structure and calculate solvent accessible surface area
\&  gmx-chi	Calculate everything you want to know about chi and other dihedrals
\&  gmx-helix	Calculate basic properties of alpha helices
\&  gmx-helixorient	Calculate local pitch/bending/rotation/orientation inside helices
\&  gmx-rama	Compute Ramachandran plots
\&  gmx-wheel	Plot helical wheels
.Ve
.Sh "Interfaces"
.IX Subsection "Interfaces"
.Vb
.ta 16n
\&  gmx-bundle	Analyze bundles of axes, e.g., helices
\&  gmx-density	Calculate the density of the system
\&  gmx-densmap	Calculate 2D planar or axial-radial density maps
\&  gmx-densorder	Calculate surface fluctuations
\&  gmx-h2order	Compute the orientation of water molecules
\&  gmx-hydorder	Compute tetrahedrality parameters around a given atom
\&  gmx-order	Compute the order parameter per atom for carbon tails
\&  gmx-potential	Calculate the electrostatic potential across the box
.Ve
.Sh "Covariance analysis"
.IX Subsection "Covariance analysis"
.Vb
.ta 16n
\&  gmx-anaeig	Analyze the eigenvectors
\&  gmx-covar	Calculate and diagonalize the covariance matrix
\&  gmx-make_edi	Generate input files for essential dynamics sampling
.Ve
.Sh "Normal modes"
.IX Subsection "Normal modes"
.Vb
.ta 16n
\&  gmx-anaeig	Analyze the normal modes
\&  gmx-nmeig	Diagonalize the Hessian for normal mode analysis
\&  gmx-nmtraj	Generate a virtual oscillating trajectory from an eigenvector
\&  gmx-nmens	Generate an ensemble of structures from the normal modes
\&  gmx-grompp	Make a run input file
\&  gmx-mdrun	Find a potential energy minimum and calculate the Hessian
.Ve

.PP
.SH "ADDITIONAL DOCUMENTATION"
.IX Header "ADDITIONAL DOCUMENTATION"
Consult the manual at <\fIhttp://www.gromacs.org/content/view/27/42/\fR> for an
introduction to molecular dynamics in general and GROMACS in particular,
as well as an overview of the individual programs.
.PP
The shorter HTML reference is available in \fB/usr/share/doc/gromacs/html/\fR .
.SH "REFERENCES"
.IX Header "REFERENCES"
The development of GROMACS is mainly funded by academic research grants.
To help us fund development, the authors humbly ask that you cite the GROMACS papers:
.PP
H.J.C. Berendsen, D. van der Spoel and R. van Drunen.  \fBGROMACS: A message-passing
parallel molecular dynamics implementation\fR.  Comp. Phys. Comm. \fI91\fR, 43-56 (1995)
.PP
Erik Lindahl, Berk Hess and David van der Spoel.  \fBGROMACS 3.0: A package for 
molecular simulation and trajectory analysis\fR.  J. Mol. Mod. \fI7\fR, 306-317 (2001)
.PP
B. Hess, C. Kutzner, D. van der Spoel, and E. Lindahl.  \fBGROMACS 4: Algorithms for
Highly Efficient, Load-Balanced, and Scalable Molecular Simulation\fR.  J. Chem. Theory 
Comput. \fI4\fR, 3, 435-447 (2008), <\fIhttp://dx.doi.org/10.1021/ct700301q\fR>
.SH "AUTHORS"
.IX Header "AUTHORS"
Current developers:
.PP
David van der Spoel <spoel@gromacs.org>
.br
Berk Hess <hess@gromacs.org>
.br
Erik Lindahl <lindahl@gromacs.org>
.PP
A full list of present and former contributors
is available at <http://www.gromacs.org>
.PP
This manual page is largely based on the GROMACS online reference, and was
prepared in this format by Nicholas Breen <nbreen@ofb.net>.
.SH "BUGS"
.IX Header "BUGS"
GROMACS has no major known bugs, but be warned that it stresses your CPU more
than most software.  Systems with slightly flaky hardware may prove unreliable
while running heavy-duty simulations.  If at all possible, please try to
reproduce bugs on another machine before reporting them.
